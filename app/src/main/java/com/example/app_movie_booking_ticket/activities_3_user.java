package com.example.app_movie_booking_ticket;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class activities_3_user extends AppCompatActivity {

    private TextView txtUsername, txtEmail;
    private FirebaseAuth mAuth;
    private DatabaseReference ref;
    private SharedPreferences prefs;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.layouts_3_user);

        // üîπ √Ånh x·∫° view
        ImageButton btnBack = findViewById(R.id.btnBack);
        ImageView imgAvatar = findViewById(R.id.imgAvatar);
        txtUsername = findViewById(R.id.txtUsername);
        txtEmail = findViewById(R.id.txtEmail);
        Button btnEditProfile = findViewById(R.id.btnEditProfile);
        Button btnSettings = findViewById(R.id.btnSettings);
        Button btnLogout = findViewById(R.id.btnLogout);

        // üîπ Firebase
        mAuth = FirebaseAuth.getInstance();
        ref = FirebaseDatabase.getInstance().getReference("users");

        // üîπ SharedPreferences
        prefs = getSharedPreferences("UserPrefs", MODE_PRIVATE);

        // ‚úÖ Ki·ªÉm tra n·∫øu ch∆∞a ƒëƒÉng nh·∫≠p ‚Üí quay v·ªÅ m√†n h√¨nh login
        FirebaseUser currentUser = mAuth.getCurrentUser();
        if (currentUser == null) {
            redirectToLogin();
            return;
        }

        // üîπ L·∫•y email t·ª´ SharedPreferences (∆∞u ti√™n)
        String email = prefs.getString("email", null);
        if (email == null) {
            // n·∫øu kh√¥ng c√≥ trong SharedPreferences ‚Üí l·∫•y t·ª´ FirebaseAuth
            email = currentUser.getEmail();
            if (email != null) {
                prefs.edit().putString("email", email).apply();
            }
        }

        // üîπ Hi·ªÉn th·ªã email
        txtEmail.setText(email != null ? email : "Kh√¥ng c√≥ email");

        // üîπ G·ªçi h√†m t·∫£i d·ªØ li·ªáu ng∆∞·ªùi d√πng
        if (email != null) {
            loadUserData(email);
        } else {
            txtUsername.setText("Ng∆∞·ªùi d√πng");
        }

        // üîô N√∫t quay l·∫°i menu
        btnBack.setOnClickListener(v -> {
            Intent intent = new Intent(activities_3_user.this, activities_2_menu.class);
            startActivity(intent);
            finish();
        });

        // ‚úèÔ∏è Ch·ªânh s·ª≠a th√¥ng tin
        btnEditProfile.setOnClickListener(v ->
                Toast.makeText(this, "Ch·ª©c nƒÉng ch·ªânh s·ª≠a th√¥ng tin (ch∆∞a ho·∫°t ƒë·ªông)", Toast.LENGTH_SHORT).show()
        );

        // ‚öôÔ∏è C√†i ƒë·∫∑t t√†i kho·∫£n
        btnSettings.setOnClickListener(v ->
                Toast.makeText(this, "M·ªü c√†i ƒë·∫∑t t√†i kho·∫£n (ch∆∞a ho·∫°t ƒë·ªông)", Toast.LENGTH_SHORT).show()
        );

        // üö™ ƒêƒÉng xu·∫•t
        btnLogout.setOnClickListener(v -> {
            Toast.makeText(this, "ƒê√£ ƒëƒÉng xu·∫•t!", Toast.LENGTH_SHORT).show();

            // X√≥a th√¥ng tin ƒë√£ l∆∞u
            prefs.edit().clear().apply();

            // ƒêƒÉng xu·∫•t kh·ªèi Firebase
            mAuth.signOut();

            // Quay l·∫°i m√†n h√¨nh ƒëƒÉng nh·∫≠p
            redirectToLogin();
        });
    }

    private void loadUserData(String email) {
        ref.orderByChild("email").equalTo(email)
                .addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        if (snapshot.exists()) {
                            for (DataSnapshot child : snapshot.getChildren()) {
                                String username = child.child("fullName").getValue(String.class);
                                txtUsername.setText(username != null ? username : "Ng∆∞·ªùi d√πng");
                            }
                        } else {
                            txtUsername.setText("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng");
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {
                        Toast.makeText(activities_3_user.this,
                                "L·ªói t·∫£i d·ªØ li·ªáu: " + error.getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void redirectToLogin() {
        Intent intent = new Intent(activities_3_user.this, activities_1_login.class);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
        finish();
    }
}
